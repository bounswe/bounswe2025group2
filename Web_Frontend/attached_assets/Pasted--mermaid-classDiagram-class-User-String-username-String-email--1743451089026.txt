```mermaid
classDiagram
    class User {
        - String username
        - String email
        - String password
        - String userID
        - List~Badge~ allBadges
        - List~Challenge~ allChallenges
        - List~Goal~ allGoals
        - List~String~ archivedPosts
        - List~Notification~ notifications
        + register() int
        + login() int
        + logout() int
        + editProfile(Map~String changeFileds, String changeValues~ changes) int
        + joinChallenge(Challenge challenge) int
        + trackProgress(Challenge challenge) int
        + getUserInfo() Map~String fields, String values~ info
        + getArchivedForumThreads() List~String~ archivedPosts
        + getNotifications() List~Notification~ notifications
    }
     class Goal {
        - String type
        - String metric
        - double targetValue
        - double currentValue
        - String status
        + updateProgress(double newValue) int
        + restartGoal() int
    }

    class Profile {
        - String username
        - String bio
        - String profilePicture
        - List~Badge~ activeBadges
        - List~Challenge~ activeChallenges
        - List~Goal~ activeGoals
        - List~String~ sportsInterests
        - List~String~ posts
        - String userType
        + updateProfile(Map~String changeFileds, String changeValues~ changes) int
        + updateChallanges(Map~Challange changedChallanges, String changeValues~ changes) int
        + updateGoals(Map~Goal changedGoals, String changeValues~ changes) int
        + updateInterests(Map~String changeFileds, String changeValues~ changes) int
        + follow() int
        + block() int
        + mute() int
        + getProfileInfo() Map~String fields, String values~ info
        + getFollows() List~String~ usernames
        + getFollowers() List~String~ usernames
        + getForumThreads() List~String~ posts
        + loadImage() int
    }

    class Badge {
        - String name
        - String description
        - String icon
        - String source
        + getBadgeInfo() int
        + assignToUser(User user) int
        + loadImage() int
        + getSource() String
    }

    class Mentor {
        - List~String~ activeMenteeIDs
        - List~String~ pastMenteeIDs
        - List~Feedback~ givenFeedbacks
        + setGoals(String username_mentee, Goal goal)
        + trackMenteeProgress(String username_mentee)
        + provideFeedback(String username_mentee, String feedback)
        + getActiveMenteeIDs() List~String~ activeMenteeIDs
        + getPastMenteeIDs() List~String~ pastMenteeIDs
        + updateMenteeIDs(Map~String fields, String values~) int
        + getGivenFeedbacks() List~Feedback~ givenFeedbacks
    }

    class Coach {
        - List~String~ verificationData
        + getVerificationData() List~String~ verificationData
    }
    User <|-- Coach
    class Mentee {
        - List~String~ activeMentorIDs
        - List~String~ pastMentorIDs
        - List~String~ activeCoachIDs
        - List~String~ pastCoachIDs
        - List~Feedback~ feedbacks
        + getActiveMentorIDs() List~String~ activeMentorIDs
        + getPastMentorIDs() List~String~ pastMentorIDs
        + getActiveCoachIDs() List~String~ activeCoachIDs
        + getPastCoachIDs() List~String~ pastCoachIDs
        + updateCoachAndMentorIDs(Map~String fields, String values~) int
        + getFeedbacks() List~Feedback~ feedbacks
    }
    User <|-- Mentor
    User <|-- Mentee


    class Feedback {
        - String content
        - boolean isRead
        + getContent() String content
        + isRead() Boolean isRead
    }

    class SearchDirectory {
        - List~String~ displayedResults
        + getSearchResults(Map~String filters, String values~) List~String~ displayedResults
    }

     class Challenge {
        - String name
        - String type
        - Date startDate
        - Date endDate
        - String status
        - List~User~ participants 
        + joinChallenge(User user) int
        + trackProgress(User user) int
        + getName() String 
        + setName(String name) int
        + getType() String 
        + setType(String type) int 
        + getStartDate() Date 
        + setStartDate(Date date) int
        + getEndDate() Date 
        + setEndDate(Date date) int
        + getStatus() String 
        + setStatus(String status) int
        + getParticipants() List~User~ 
        + setParticipants(List~User~ participants) int
    }



    class Leaderboard {
        - Challenge challenge
        - Map~User, int~ rankings
        - Date lastUpdated
        + updateRanking(User user, double value) int
        + getRanking(User user) int
        + filterRankings(String criteria) List~User~
        + resetRanking() int
        + animateRankingUpdate() int
    }

    class Chat {
        - String chatId
        - List~User~ participants
        - List~Message~ messages
        + addMessage(Message message) int
        + getChatHistory()  List~Message~
        + sendReadReceipt(Message message) int
        + startGroupChat(List~User~ participants) int
        + addReaction(Message message, String reaction) int
        + setTypingIndicator(User user, boolean isTyping) int
    }

    class Message {
        - String content
        - Date timestamp
        - User sender
        + addReaction(String reaction) int
    }
    class MailSystem  {
        - List~Mail~ queuedMails
        + sendMail(User recipient, String subject, String content) int
        + scheduleLeadMail(User user) int
        + getQueuedMails() List~Mail~
        + notifyMailEvent(User user, Mail mail) int
    }
     
    class Mail  {
        - String subject
        - String content
        - Date timestamp
        - boolean isSent
    }

    class Forum {
        +List~Thread~ threads
        +createThread(Thread thread) int
        +deleteThread(Thread thread) int
        +getThreads() List~Thread~
        +searchThreads(String keyword) List~Thread~
    }
    
    class Thread {
        -String threadId
        -String title
        -Post rootPost
        -List~String~ tags
        +editThread(String newTitle) int
        +deleteThread() int
        +postInThread(Thread thread, String content) int
        +sendNotification(Notification notification) int
    }

    class Post {
        -String postId
        -String content
        -User author
        -Date createdAt
        -int upvotes
        -int downvotes
        -List~Post~ replies
        +reply(Post reply) int
        +editPost(String newContent) int
        +deletePost() int
        +upvote() int
        +downvote() int
        +reportPost() int
    }

    class ForumAdmin {
        -String adminId
        -List~Thread~ reportedThreads
        +moderateThread(Thread thread) int
        +moderatePost(Post post) int
        +deleteThread(Thread thread) int
        +deletePost(Post post) int
        +suspendUser(User user) int
    }

    class Notification {
        -String notificationId
        -User recipient
        -String message
        -boolean isRead
        -Date timestamp
        +markAsRead() int
    }

    class NotificationSystem {
        -List~Notification~ notifications
        +sendNotification(User recipient, String message) int
        +getNotifications(User user) List~Notification~
        +markAllAsRead(User user) int
    }

    Forum "1" *-- "0..*" Thread  : has
    Thread "1" *-- "1" Post  : rootPost
    Post "1" -- "0..*" Post  : replies
    Thread "1" o-- "1" User  : created by
    Post "1" o-- "1" User  : written by
    Thread "1..*" -- "1" User  : moderated by
    User "1" -- "0..*" Notification :  receives
    NotificationSystem "1" -- "0..*" Notification  : manages
     
    Challenge "1..*" -- "1" Leaderboard  : "tracked by"
    Chat "1" *-- "1..*" Message  : has
    
    User "1" *-- "1" Profile  : has
    User "1" o-- "0..*" Badge  : has
    User "1" o-- "0..*" Goal : has
    User <|-- Mentor
    User <|-- Mentee
    Mentor <|-- Coach
    Mentor "1" -- "0..*" Feedback  : sends
    Coach "1" -- "0..*" Feedback  : sends
    Coach "1" o-- "0..*" Goal : can set/view goals
    Mentee "0..*" -- "1" Feedback  : receives
    User "1" -- "0..*" SearchDirectory  :  uses
    MailSystem "1" --> "1" NotificationSystem : uses
    MailSystem "1" *-- "1..*" Mail : has
    
```